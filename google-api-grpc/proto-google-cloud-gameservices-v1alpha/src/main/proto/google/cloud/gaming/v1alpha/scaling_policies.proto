// Copyright 2019 Google LLC.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//

syntax = "proto3";

package google.cloud.gaming.v1alpha;

import "google/api/annotations.proto";
import "google/cloud/gaming/v1alpha/common.proto";
import "google/longrunning/operations.proto";
import "google/protobuf/duration.proto";
import "google/protobuf/field_mask.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";
import "google/api/client.proto";

option go_package = "google.golang.org/genproto/googleapis/cloud/gaming/v1alpha;gaming";

option java_multiple_files = true;
option java_package = "com.google.cloud.gaming.v1alpha";

// The cloud gaming scaling policy is used to configure scaling parameters for
// each fleet.
service ScalingPoliciesService {
  option (google.api.default_host) = "gameservices.googleapis.com";

  // Lists ScalingPolicies in a given project and location.
  rpc ListScalingPolicies(ListScalingPoliciesRequest) returns (ListScalingPoliciesResponse) {
    option (google.api.http) = {
      get: "/v1alpha/{parent=projects/*/locations/*}/scalingPolicies"
    };
  }

  // Gets details of a single scaling policy.
  rpc GetScalingPolicy(GetScalingPolicyRequest) returns (ScalingPolicy) {
    option (google.api.http) = {
      get: "/v1alpha/{name=projects/*/locations/*/scalingPolicies/*}"
    };
  }

  // Creates a new scaling policy in a given project and location.
  rpc CreateScalingPolicy(CreateScalingPolicyRequest) returns (google.longrunning.Operation) {
    option (google.api.http) = {
      post: "/v1alpha/{parent=projects/*/locations/*}/scalingPolicies"
      body: "scaling_policy"
    };
  }

  // Deletes a single scaling policy.
  rpc DeleteScalingPolicy(DeleteScalingPolicyRequest) returns (google.longrunning.Operation) {
    option (google.api.http) = {
      delete: "/v1alpha/{name=projects/*/locations/*/scalingPolicies/*}"
    };
  }

  // Patches a single scaling policy.
  rpc UpdateScalingPolicy(UpdateScalingPolicyRequest) returns (google.longrunning.Operation) {
    option (google.api.http) = {
      patch: "/v1alpha/{scaling_policy.name=projects/*/locations/*/scalingPolicies/*}"
      body: "scaling_policy"
    };
  }
}

// Request message for ScalingPoliciesService.ListScalingPolicies.
message ListScalingPoliciesRequest {
  // Required. The parent resource name, using the form:
  // `projects/{project_id}/locations/{location}`.
  string parent = 1;

  // / Optional. The maximum number of items to return.  If unspecified, server
  // will pick an appropriate default. Server may return fewer items than
  // requested. A caller should only rely on response's
  // [next_page_token][google.cloud.gaming.v1alpha.ListScalingPoliciesResponse.next_page_token] to
  // determine if there are more ScalingPolicies left to be queried.
  int32 page_size = 2;

  // Optional. The next_page_token value returned from a previous List request,
  // if any.
  string page_token = 3;

  // Optional. The filter to apply to list results.
  string filter = 4;

  // Optional. Specifies the ordering of results following syntax at
  // https://cloud.google.com/apis/design/design_patterns#sorting_order.
  string order_by = 5;
}

// Response message for ScalingPoliciesService.ListScalingPolicies.
message ListScalingPoliciesResponse {
  // The list of scaling policies.
  repeated ScalingPolicy scaling_policies = 1;

  // Token to retrieve the next page of results, or empty if there are no more
  // results in the list.
  string next_page_token = 2;
}

// Request message for ScalingPoliciesService.GetScalingPolicy.
message GetScalingPolicyRequest {
  // Required. The name of the scaling policy to retrieve, using the form:
  //
  // `projects/{project_id}/locations/{location}/scalingPolicies/{scaling_policy_id}`
  string name = 1;
}

// Request message for ScalingPoliciesService.CreateScalingPolicy.
message CreateScalingPolicyRequest {
  // Required. The parent resource name, using the form:
  // `projects/{project_id}/locations/{location}`.
  string parent = 1;

  // Required. The ID of the scaling policy resource to be created.
  string scaling_policy_id = 2;

  // Required. The scaling policy resource to be created.
  ScalingPolicy scaling_policy = 3;
}

// Request message for ScalingPoliciesService.DeleteScalingPolicy.
message DeleteScalingPolicyRequest {
  // Required. The name of the scaling policy to delete, using the form:
  //
  // `projects/{project_id}/locations/{location}/scalingPolicies/{scaling_policy_id}`
  string name = 1;
}

// Request message for ScalingPoliciesService.UpdateScalingPolicy.
message UpdateScalingPolicyRequest {
  // Required. The scaling policy to be updated.
  // Only fields specified in update_mask are updated.
  ScalingPolicy scaling_policy = 1;

  // Required. Mask of fields to update. At least one path must be supplied in
  // this field. For the `FieldMask` definition, see
  //
  // https:
  // //developers.google.com/protocol-buffers
  // // /docs/reference/google.protobuf#fieldmask
  google.protobuf.FieldMask update_mask = 2;
}

// Fleet autoscaling parameters.
message FleetAutoscalerSettings {
  oneof buffer_size {
    // The size of a buffer of ready game server instances in absolute number.
    // As game server instances get allocated or terminated, the fleet will be
    // scaled up and down so that this buffer is maintained.
    int64 buffer_size_absolute = 1;

    // The size of a buffer of ready game server instances in percentage.
    // As game server instances get allocated or terminated, the fleet will be
    // scaled up and down so that this buffer is maintained.
    float buffer_size_percentage = 2;
  }

  // The minimum fleet size.
  int64 min_replicas = 3;

  // The maximum fleet size.
  int64 max_replicas = 4;
}

// A scaling policy resource.
message ScalingPolicy {
  // The resource name of the scaling policy, using the form:
  //
  // `projects/{project_id}/locations/{location}/scalingPolicies/{scaling_policy_id}`.
  // For example,
  // `projects/my-project/locations/{location}/scalingPolicies/my-policy`.
  string name = 1;

  // Output only. The creation time.
  google.protobuf.Timestamp create_time = 2;

  // Output only. The last-modified time.
  google.protobuf.Timestamp update_time = 3;

  // The labels associated with this scaling policy. Each label is a key-value
  // pair.
  map<string, string> labels = 4;

  // Fleet autoscaler parameters.
  FleetAutoscalerSettings fleet_autoscaler_settings = 5;

  // Required. The priority of the policy. A smaller value indicates a higher
  // priority.
  google.protobuf.Int32Value priority = 6;

  // Labels used to identify the clusters to which this scaling policy applies.
  // A cluster is subject to this scaling policy if its labels match any of the
  // cluster selector entries.
  repeated LabelSelector cluster_selectors = 7;

  // The schedules to which this scaling policy applies.
  repeated Schedule schedules = 8;

  // The game server deployment for this scaling policy. For example,
  //
  // "projects/my-project/locations/{location}/gameServerDeployments/my-deployment".
  string game_server_deployment = 9;
}
