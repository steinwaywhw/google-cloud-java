// Copyright 2019 Google LLC.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//

syntax = "proto3";

package google.cloud.gaming.v1alpha;

import "google/api/annotations.proto";
import "google/longrunning/operations.proto";
import "google/protobuf/field_mask.proto";
import "google/protobuf/timestamp.proto";
import "google/api/client.proto";

option go_package = "google.golang.org/genproto/googleapis/cloud/gaming/v1alpha;gaming";

option java_multiple_files = true;
option java_package = "com.google.cloud.gaming.v1alpha";

// The game server cluster is used to capture the game server cluster's settings
// which are used to manage game server clusters.
service GameServerClustersService {
  option (google.api.default_host) = "gameservices.googleapis.com";

  // Lists game server clusters in a given project and location.
  rpc ListGameServerClusters(ListGameServerClustersRequest) returns (ListGameServerClustersResponse) {
    option (google.api.http) = {
      get: "/v1alpha/{parent=projects/*/locations/*/realms/*}/gameServerClusters"
    };
  }

  // Gets details of a single game server cluster.
  rpc GetGameServerCluster(GetGameServerClusterRequest) returns (GameServerCluster) {
    option (google.api.http) = {
      get: "/v1alpha/{name=projects/*/locations/*/realms/*/gameServerClusters/*}"
    };
  }

  // Creates a new game server cluster in a given project and location.
  rpc CreateGameServerCluster(CreateGameServerClusterRequest) returns (google.longrunning.Operation) {
    option (google.api.http) = {
      post: "/v1alpha/{parent=projects/*/locations/*/realms/*}/gameServerClusters"
      body: "game_server_cluster"
    };
  }

  // Deletes a single game server cluster.
  rpc DeleteGameServerCluster(DeleteGameServerClusterRequest) returns (google.longrunning.Operation) {
    option (google.api.http) = {
      delete: "/v1alpha/{name=projects/*/locations/*/realms/*/gameServerClusters/*}"
    };
  }

  // Patches a single game server cluster.
  rpc UpdateGameServerCluster(UpdateGameServerClusterRequest) returns (google.longrunning.Operation) {
    option (google.api.http) = {
      patch: "/v1alpha/{game_server_cluster.name=projects/*/locations/*/realms/*/gameServerClusters/*}"
      body: "game_server_cluster"
    };
  }
}

// Request message for GameServerClustersService.ListGameServerClusters.
message ListGameServerClustersRequest {
  // Required. The parent resource name, using the form:
  // "projects/{project_id}/locations/{location}/realms/{realm-id}".
  string parent = 1;

  // Optional. The maximum number of items to return.  If unspecified, server
  // will pick an appropriate default. Server may return fewer items than
  // requested. A caller should only rely on response's
  // [next_page_token][google.cloud.gaming.v1alpha.ListGameServerClustersResponse.next_page_token] to
  // determine if there are more GameServerClusters left to be queried.
  int32 page_size = 2;

  // Optional. The next_page_token value returned from a previous List request,
  // if any.
  string page_token = 3;

  // Optional. The filter to apply to list results.
  string filter = 4;

  // Optional. Specifies the ordering of results following syntax at
  // https://cloud.google.com/apis/design/design_patterns#sorting_order.
  string order_by = 5;
}

// Response message for GameServerClustersService.ListGameServerClusters.
message ListGameServerClustersResponse {
  // The list of game server clusters.
  repeated GameServerCluster game_server_clusters = 1;

  // Token to retrieve the next page of results, or empty if there are no more
  // results in the list.
  string next_page_token = 2;
}

// Request message for GameServerClustersService.GetGameServerCluster.
message GetGameServerClusterRequest {
  // Required. The name of the game server cluster to retrieve, using the form:
  //
  // `projects/{project_id}/locations/{location}/realms/{realm-id}/gameServerClusters/{cluster_id}`
  string name = 1;
}

// Request message for GameServerClustersService.CreateGameServerCluster.
message CreateGameServerClusterRequest {
  // Required. The parent resource name, using the form:
  // `projects/{project_id}/locations/{location}/realms/{realm-id}`.
  string parent = 1;

  // Required. The ID of the game server cluster resource to be created.
  string game_server_cluster_id = 2;

  // Required. The game server cluster resource to be created.
  GameServerCluster game_server_cluster = 3;
}

// Request message for GameServerClustersService.DeleteGameServerCluster.
message DeleteGameServerClusterRequest {
  // Required. The name of the game server cluster to delete, using the form:
  //
  // `projects/{project_id}/locations/{location}/gameServerClusters/{cluster_id}`
  string name = 1;
}

// Request message for GameServerClustersService.UpdateGameServerCluster.
message UpdateGameServerClusterRequest {
  // Required. The game server cluster to be updated.
  // Only fields specified in update_mask are updated.
  GameServerCluster game_server_cluster = 1;

  // Required. Mask of fields to update. At least one path must be supplied in
  // this field. For the `FieldMask` definition, see
  //
  // https:
  // //developers.google.com/protocol-buffers
  // // /docs/reference/google.protobuf#fieldmask
  google.protobuf.FieldMask update_mask = 2;
}

// Game server cluster connection information.
message GameServerClusterConnectionInfo {
  // Namespace for Kubernetes API server endpoint.
  string namespace = 5;

  // This is the gkeName where the game server cluster is installed.
  // It must the format "projects/*/locations/*/clusters/*". For example,
  // "projects/my-project/locations/us-central1/clusters/test".
  string gke_name = 6;
}

// A game server cluster resource.
message GameServerCluster {
  // The resource name of the game server cluster, using the form:
  //
  // `projects/{project_id}/locations/{location}/realms/{realm_id}/gameServerClusters/{cluster_id}`.
  // For example,
  //
  // `projects/my-project/locations/{location}/realms/zanzibar/gameServerClusters/my-onprem-cluster`.
  string name = 1;

  // Output only. The creation time.
  google.protobuf.Timestamp create_time = 2;

  // Output only. The last-modified time.
  google.protobuf.Timestamp update_time = 3;

  // The labels associated with this game server cluster. Each label is a
  // key-value pair.
  map<string, string> labels = 4;

  // Game server cluster connection information. This information is used to
  // manage game server clusters.
  GameServerClusterConnectionInfo connection_info = 5;
}
